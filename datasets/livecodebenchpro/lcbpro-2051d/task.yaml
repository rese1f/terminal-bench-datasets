descriptions:
  - key: base
    description: |
      LiveCodeBench Pro (Mini) - external judge.

      The agent must create a C++17 solution file at /app/main.cpp.
      This task does not include local test cases. Instead, the test harness:
        1) POSTs the code to the external judge (/submit) to get a sid,
        2) polls GET /result/{sid}?short=1 until status == "done",
        3) passes only if the judge returns passed == true.

      Environment variables (overridable at runtime):
        - BASE_URL: judge base URL (default http://38.80.122.117:8081)
        - PID: problem id (default 2051D)
        - LANG: language (default cpp)
        - CODE_PATH: path to code (default /app/main.cpp)
        - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)
  - key: problem
    description: |
      You are given a sequence $a$, consisting of $n$ integers, where the $i$-th element of the sequence is equal to $a_i$. You are also given two integers $x$ and $y$ ($x \le y$).

      A pair of integers $(i, j)$ is considered interesting if the following conditions are met:

      - $1 \le i < j \le n$;
      - if you simultaneously remove the elements at positions $i$ and $j$ from the sequence $a$, the sum of the remaining elements is at least $x$ and at most $y$.

      Your task is to determine the number of interesting pairs of integers for the given sequence $a$.

      ### Input

      The first line contains one integer $t$ ($1 \le t \le 10^4$) -- the number of test cases.

      Each test case consists of two lines:

      - The first line contains three integers $n, x, y$ ($3 \le n \le 2 \cdot 10^5$, $1 \le x \le y \le 2 \cdot 10^{14}$);
      - The second line contains $n$ integers $a_1, a_2, \dots, a_n$ ($1 \le a_i \le 10^{9}$).

      Additional constraint on the input: the sum of $n$ across all test cases does not exceed $2 \cdot 10^5$.

      ### Output

      For each test case, output one integer -- the number of interesting pairs of integers for the given sequence $a$.

      ### Example

      #### Input #1

      ```

      7

      4 8 10

      4 6 3 6

      6 22 27

      4 9 6 3 4 5

      3 8 10

      3 2 1

      3 1 1

      2 3 4

      3 3 6

      3 2 1

      4 4 12

      3 3 2 1

      6 8 8

      1 1 2 2 2 3

      ```

      #### Output #1

      ```
      4
      7
      0
      0
      1
      5
      6
      ```

      ### Note

      In the first example, there are $4$ interesting pairs of integers:

      1. $(1, 2)$;
      2. $(1, 4)$;
      3. $(2, 3)$;
      4. $(3, 4)$.

instruction: base
author_email: shz060@ucsd.edu
author: LiveCodeBench Pro Team
difficulty: easy
tags: []
max_agent_timeout_sec: 300
max_test_timeout_sec: 180