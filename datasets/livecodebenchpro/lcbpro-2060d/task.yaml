descriptions:
  - key: base
    description: |
      LiveCodeBench Pro (Mini) - external judge.

      The agent must create a C++17 solution file at /app/main.cpp.
      This task does not include local test cases. Instead, the test harness:
        1) POSTs the code to the external judge (/submit) to get a sid,
        2) polls GET /result/{sid}?short=1 until status == "done",
        3) passes only if the judge returns passed == true.

      Environment variables (overridable at runtime):
        - BASE_URL: judge base URL (default http://38.80.122.117:8081)
        - PID: problem id (default 2060D)
        - LANG: language (default cpp)
        - CODE_PATH: path to code (default /app/main.cpp)
        - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)
  - key: problem
    description: |
      You are given a sequence $a$ consisting of $n$ positive integers.

      You can perform the following operation any number of times.

      - Select an index $i$ ($1 \le i < n$), and subtract $\min(a_i,a_{i+1})$ from both $a_i$ and $a_{i+1}$.

      Determine if it is possible to make the sequence non-decreasing by using the operation any number of times.

      ### Input

      Each test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \le t \le 10^4$). The description of the test cases follows.

      The first line of each test case contains a single integer $n$ ($2 \le n \le 2 \cdot 10^5$).

      The second line of each test case contains $a_1,a_2,\ldots,a_n$ ($1 \le a_i \le 10^9$).

      It is guaranteed that the sum of $n$ over all test cases does not exceed $2 \cdot 10^5$.

      ### Output

      If it is possible to make the sequence non-decreasing, print "YES" on a new line. Otherwise, print "NO" on a new line.

      You can output the answer in any case. For example, the strings "yEs", "yes", and "Yes" will also be recognized as positive responses.

      ### Example

      #### Input #1

      ```

      5

      5

      1 2 3 4 5

      4

      4 3 2 1

      4

      4 5 2 3

      8

      4 5 4 5 4 5 4 5

      9

      9 9 8 2 4 4 3 5 3

      ```

      #### Output #1

      ```
      YES
      NO
      YES
      YES
      NO
      ```

      ### Note

      In the first test case, the array is already sorted.

      In the second test case, we can show that it is impossible.

      In the third test case, after performing an operation on $i=1$, the array becomes $[0,1,2,3]$, which is now in nondecreasing order.

instruction: base
author_email: shz060@ucsd.edu
author: LiveCodeBench Pro Team
difficulty: easy
tags: []
max_agent_timeout_sec: 300
max_test_timeout_sec: 180