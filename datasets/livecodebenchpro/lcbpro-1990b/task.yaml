descriptions:
  - key: base
    description: |
      LiveCodeBench Pro (Mini) - external judge.

      The agent must create a C++17 solution file at /app/main.cpp.
      This task does not include local test cases. Instead, the test harness:
        1) POSTs the code to the external judge (/submit) to get a sid,
        2) polls GET /result/{sid}?short=1 until status == "done",
        3) passes only if the judge returns passed == true.

      Environment variables (overridable at runtime):
        - BASE_URL: judge base URL (default http://38.80.122.117:8081)
        - PID: problem id (default 1990B)
        - LANG: language (default cpp)
        - CODE_PATH: path to code (default /app/main.cpp)
        - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)
  - key: problem
    description: |
      For an array $b$ of size $m$, we define:

      - the maximum prefix position of $b$ is the smallest index $i$ that satisfies $b_1+\ldots+b_i=\max_{j=1}^{m}(b_1+\ldots+b_j)$;
      - the maximum suffix position of $b$ is the largest index $i$ that satisfies $b_i+\ldots+b_m=\max_{j=1}^{m}(b_j+\ldots+b_m)$.

      You are given three integers $n$, $x$, and $y$ ($x > y$). Construct an array $a$ of size $n$ satisfying:

      - $a_i$ is either $1$ or $-1$ for all $1 \le i \le n$;
      - the maximum prefix position of $a$ is $x$;
      - the maximum suffix position of $a$ is $y$.

      If there are multiple arrays that meet the conditions, print any. It can be proven that such an array always exists under the given conditions.

      ### Input

      The first line contains an integer $t$ ($1 \leq t \leq 10^4$)Â -- the number of test cases.

      For each test case:

      - The only line contains three integers $n$, $x$, and $y$ ($2 \leq n \leq 10^5, 1 \le y \lt x \le n)$.

      It is guaranteed that the sum of $n$ over all test cases will not exceed $10^5$.

      ### Output

      For each test case, output $n$ space-separated integers $a_1, a_2, \ldots, a_n$ in a new line.

      ### Example

      #### Input #1

      ```

      3

      2 2 1

      4 4 3

      6 5 1

      ```

      #### Output #1

      ```
      1 1
      1 -1 1 1
      1 1 -1 1 1 -1```

      ### Note

      In the second test case,

      - $i=x=4$ is the smallest index that satisfies $a_1+\ldots +a_i=\max_{j=1}^{n}(a_1+\ldots+a_j)=2$;
      - $i=y=3$ is the greatest index that satisfies $a_i+\ldots +a_n=\max_{j=1}^{n}(a_j+\ldots+a_n)=2$.

      Thus, the array $a=[1,-1,1,1]$ is considered correct.

instruction: base
author_email: shz060@ucsd.edu
author: LiveCodeBench Pro Team
difficulty: easy
tags: []
max_agent_timeout_sec: 300
max_test_timeout_sec: 180