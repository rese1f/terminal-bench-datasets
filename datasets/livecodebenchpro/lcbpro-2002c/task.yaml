descriptions:
  - key: base
    description: |
      LiveCodeBench Pro (Mini) - external judge.

      The agent must create a C++17 solution file at /app/main.cpp.
      This task does not include local test cases. Instead, the test harness:
        1) POSTs the code to the external judge (/submit) to get a sid,
        2) polls GET /result/{sid}?short=1 until status == "done",
        3) passes only if the judge returns passed == true.

      Environment variables (overridable at runtime):
        - BASE_URL: judge base URL (default http://38.80.122.117:8081)
        - PID: problem id (default 2002C)
        - LANG: language (default cpp)
        - CODE_PATH: path to code (default /app/main.cpp)
        - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)
  - key: problem
    description: |
      There are $n$ circles on a two-dimensional plane. The $i$-th circle is centered at $(x_i,y_i)$. Initially, all circles have a radius of $0$.

      The circles' radii increase at a rate of $1$ unit per second.

      You are currently at $(x_s,y_s)$; your goal is to reach $(x_t,y_t)$ without touching the circumference of any circle (including the moment you reach $(x_t,y_t)$). You can move in any direction you want. However, your speed is limited to $1$ unit per second.

      Please determine whether this is possible.

      ### Input

      Each test contains multiple test cases. The first line contains the number of test cases $t$ ($1\le t\le10^4$). The description of the test cases follows.

      The first line of each test case contains a single integer $n$ ($1\le n\le10^5$) -- the number of circles.

      The next $n$ lines each contain two integers $x_i$, $y_i$ ($1\le x_i,y_i\le10^9$) -- the center of each circle.

      The final line contains four integers $x_s$, $y_s$, $x_t$, $y_t$ ($1\le x_s,y_s,x_t,y_t\le10^9$) -- the coordinates of the starting point and the goal, respectively.

      It is guaranteed that these $n+2$ points are distinct.

      It is guaranteed that the sum of $n$ over all testcases does not exceed $10^5$.

      ### Output

      For each test case, output $\texttt{YES}$ if it is possible to reach the goal without touching the circle boundaries, and output $\texttt{NO}$ otherwise.

      You can output $\texttt{Yes}$ and $\texttt{No}$ in any case (for example, strings $\texttt{yEs}$, $\texttt{yes}$, $\texttt{Yes}$, and $\texttt{YES}$ will be recognized as a positive response).

      ### Example

      #### Input #1

      ```

      7

      3

      2 5

      2 14

      10 13

      4 9 9 7

      3

      10 11

      6 9

      12 12

      14 13 4 8

      1

      5 7

      12 6 11 13

      2

      1000000000 2

      2 1000000000

      1 1 2 2

      1

      999999998 1000000000

      999999999 999999999 1 1

      1

      1000000000 1

      1 1000000000 1 1

      10

      989237121 2397081

      206669655 527238537

      522705783 380636165

      532545346 320061691

      207818728 199485303

      884520552 315781807

      992311437 802563521

      205138355 324818663

      223575704 395073023

      281560523 236279118

      216941610 572010615 323956540 794523071

      ```

      #### Output #1

      ```
      YES
      NO
      YES
      YES
      YES
      NO
      YES
      ```

      ### Note

      In the first test case, a feasible way of movement is as follows.

      ![](https://espresso.codeforces.com/44e6932b7c975d247fecdc471ff7f6c1fa344b13.png)

instruction: base
author_email: shz060@ucsd.edu
author: LiveCodeBench Pro Team
difficulty: easy
tags: []
max_agent_timeout_sec: 300
max_test_timeout_sec: 180