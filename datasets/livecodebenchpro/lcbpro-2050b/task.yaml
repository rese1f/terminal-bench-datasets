descriptions:
  - key: base
    description: |
      LiveCodeBench Pro (Mini) - external judge.

      The agent must create a C++17 solution file at /app/main.cpp.
      This task does not include local test cases. Instead, the test harness:
        1) POSTs the code to the external judge (/submit) to get a sid,
        2) polls GET /result/{sid}?short=1 until status == "done",
        3) passes only if the judge returns passed == true.

      Environment variables (overridable at runtime):
        - BASE_URL: judge base URL (default http://38.80.122.117:8081)
        - PID: problem id (default 2050B)
        - LANG: language (default cpp)
        - CODE_PATH: path to code (default /app/main.cpp)
        - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)
  - key: problem
    description: |
      You are given an array $a$ of length $n$. In one operation, you can pick an index $i$ from $2$ to $n-1$ inclusive, and do one of the following actions:

      - Decrease $a_{i-1}$ by $1$, then increase $a_{i+1}$ by $1$.

      - Decrease $a_{i+1}$ by $1$, then increase $a_{i-1}$ by $1$.

      After each operation, all the values must be non-negative. Can you make all the elements equal after any number of operations?

      ### Input

      First line of input consists of one integer $t$ ($1 \le t \le 10^4$)  -- the number of test cases.

      First line of each test case consists of one integer $n$ ($3 \le n \le 2\cdot 10^5$).

      Second line of each test case consists of $n$ integers $a_i$ ($1 \le a_i \le 10^9$).

      It is guaranteed that the sum of $n$ of all test cases doesn't exceed $2\cdot 10^5$.

      ### Output

      For each test case, print "YES" without quotation marks if it is possible to make all the elements equal after any number of operations; otherwise, print "NO" without quotation marks.

      You can print answers in any register: "yes", "YeS", "nO"  -- will also be considered correct.

      ### Example

      #### Input #1

      ```

      8

      3

      3 2 1

      3

      1 1 3

      4

      1 2 5 4

      4

      1 6 6 1

      5

      6 2 1 4 2

      4

      1 4 2 1

      5

      3 1 2 1 3

      3

      2 4 2

      ```

      #### Output #1

      ```
      YES
      NO
      YES
      NO
      YES
      NO
      NO
      NO
      ```

instruction: base
author_email: shz060@ucsd.edu
author: LiveCodeBench Pro Team
difficulty: easy
tags: []
max_agent_timeout_sec: 300
max_test_timeout_sec: 180