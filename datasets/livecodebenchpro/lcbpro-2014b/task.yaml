descriptions:
  - key: base
    description: |
      LiveCodeBench Pro (Mini) - external judge.

      The agent must create a C++17 solution file at /app/main.cpp.
      This task does not include local test cases. Instead, the test harness:
        1) POSTs the code to the external judge (/submit) to get a sid,
        2) polls GET /result/{sid}?short=1 until status == "done",
        3) passes only if the judge returns passed == true.

      Environment variables (overridable at runtime):
        - BASE_URL: judge base URL (default http://38.80.122.117:8081)
        - PID: problem id (default 2014B)
        - LANG: language (default cpp)
        - CODE_PATH: path to code (default /app/main.cpp)
        - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)
  - key: problem
    description: |
      In Sherwood, the trees are our shelter, and we are all children of the forest.

      The Major Oak in Sherwood is known for its majestic foliage, which provided shelter to Robin Hood and his band of merry men and women.

      The Major Oak grows $i^i$ new leaves in the $i$-th year. It starts with $1$ leaf in year $1$.

      Leaves last for $k$ years on the tree. In other words, leaves grown in year $i$ last between years $i$ and $i+k-1$ inclusive.

      Robin considers even numbers lucky. Help Robin determine whether the Major Oak will have an even number of leaves in year $n$.

      ### Input

      The first line of the input contains a single integer $t$ ($1 \le t \le 10^4$) -- the number of test cases.

      Each test case consists of two integers $n$, $k$ ($1 \le n \le 10^9$, $1 \le k \le n$) -- the requested year and the number of years during which the leaves remain.

      ### Output

      For each test case, output one line, "YES" if in year $n$ the Major Oak will have an even number of leaves and "NO" otherwise.

      You can output the answer in any case (upper or lower). For example, the strings "yEs", "yes", "Yes", and "YES" will be recognized as positive responses.

      ### Example

      #### Input #1

      ```

      5

      1 1

      2 1

      2 2

      3 2

      4 4

      ```

      #### Output #1

      ```
      NO
      YES
      NO
      NO
      YES
      ```

      ### Note

      In the first test case, there is only $1$ leaf.

      In the second test case, $k=1$, so in the $2$-nd year there will be $2^2=4$ leaves.

      In the third test case, $k=2$, so in the $2$-nd year there will be $1+2^2=5$ leaves.

      In the fourth test case, $k=2$, so in the $3$-rd year there will be $2^2 + 3^3 = 4 + 27 = 31$ leaves.

instruction: base
author_email: shz060@ucsd.edu
author: LiveCodeBench Pro Team
difficulty: easy
tags: []
max_agent_timeout_sec: 300
max_test_timeout_sec: 180