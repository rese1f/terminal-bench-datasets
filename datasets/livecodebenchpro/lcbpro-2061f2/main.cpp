#include<bits/stdc++.h>
using namespace std;typedef long long ll;typedef pair<int,int> pii;const int N=4e5+10,inf=1e8;int n,m,l[N],r[N],c[N],s[2][N],f[N];char a[N],b[N];struct node{int l,r,mn0,mn1;}tr[N<<2];inline void pushup(int u){tr[u].mn0=min(tr[u<<1].mn0,tr[u<<1|1].mn0);tr[u].mn1=min(tr[u<<1].mn1,tr[u<<1|1].mn1);}inline void build(int u,int l,int r){tr[u]={l,r,inf,inf};if(l==r) return ;int mid=l+r>>1;build(u<<1,l,mid),build(u<<1|1,mid+1,r);}inline void mdf(int u,int x,int v){if(tr[u].l==tr[u].r) return (x&1?tr[u].mn1:tr[u].mn0)=v,void();int mid=tr[u].l+tr[u].r>>1;mdf(u<<1|(x>mid),x,v);pushup(u);}inline int query(int u,int l,int r,int tp){if(l>r) return inf;if(l<=tr[u].l&&tr[u].r<=r) return tp?tr[u].mn1:tr[u].mn0;int mid=tr[u].l+tr[u].r>>1;if(r<=mid) return query(u<<1,l,r,tp);if(l>mid) return query(u<<1|1,l,r,tp);return min(query(u<<1,l,r,tp),query(u<<1|1,l,r,tp));}inline void solve(){scanf("%s%s",a+2,b+2);a[1]=b[1]=a[2]^1;n=strlen(a+1),m=0;a[n+1]=b[n+1]=a[n]^1,++n;int la[2]={0,0};for(int i=1;i<=n;++i){if(b[i]!='?') la[b[i]^48]=i;if(a[i]!=a[i+1]||i==n){c[++m]=i;l[m]=la[a[i]^48^1];}}la[0]=la[1]=n+1;for(int i=n,j=m;i;--i){if(b[i]!='?') la[b[i]^48]=i;if(a[i]!=a[i-1]||i==1){r[j--]=la[a[i]^48^1];}}vector<pii>G[2];for(int i=1;i<=m;++i){s[0][i]=s[0][i-1],s[1][i]=s[1][i-1];int v=a[c[i]]^48;s[v][i]+=c[i]-c[i-1];G[v].push_back({s[v][i]+r[i]-c[i]-1,i});}sort(G[0].begin(),G[0].end());sort(G[1].begin(),G[1].end());la[0]=la[1]=0;build(1,1,m);mdf(1,1,-1);for(int i=2;i<=m;++i){int v=a[c[i]]^48;while(la[v]<G[v].size()&&s[v][i]>G[v][la[v]].first){mdf(1,G[v][la[v]].second,inf);++la[v];}int p=lower_bound(s[v]+1,s[v]+1+i,s[v][i]-c[i]+l[i])-s[v],tmp=query(1,p,i-1,i&1^1);f[i]=tmp<inf?(tmp+i-1)/2:inf;mdf(1,i,f[i]*2-i);}printf("%d\n",f[m]<inf?f[m]:-1);}int main(){int T;scanf("%d",&T);while(T--) solve();return 0;}