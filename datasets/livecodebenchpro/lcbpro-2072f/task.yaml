descriptions:
  - key: base
    description: |
      LiveCodeBench Pro (Mini) - external judge.

      The agent must create a C++17 solution file at /app/main.cpp.
      This task does not include local test cases. Instead, the test harness:
        1) POSTs the code to the external judge (/submit) to get a sid,
        2) polls GET /result/{sid}?short=1 until status == "done",
        3) passes only if the judge returns passed == true.

      Environment variables (overridable at runtime):
        - BASE_URL: judge base URL (default http://38.80.122.117:8081)
        - PID: problem id (default 2072F)
        - LANG: language (default cpp)
        - CODE_PATH: path to code (default /app/main.cpp)
        - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)
  - key: problem
    description: |
      Monsters are approaching the city, and to protect it, Akito must create a protective field around the city. As everyone knows, protective fields come in various levels. Akito has chosen the field of level $n$. To construct the field, a special phrase is required, which is the $n$-th row of the Great Magical Triangle, represented as a two-dimensional array. We will call this array $T$.

      The triangle is defined as follows:

      - In the $i$-th row, there are $i$ integers.
      - The single integer in the first row is $k$.
      - Let the $j$-th element of the $i$-th row be denoted as $T\_{i,j}$. Then

      $$T_{i,j} = \begin{cases} T_{i-1,j-1} \oplus T_{i-1,j}, &\textrm{if } 1 < j < i \\ T_{i-1,j}, &\textrm{if } j = 1 \\ T_{i-1,j-1}, &\textrm{if } j = i \end{cases}$$

      where $a \oplus b$ is the bitwise [exclusive "OR"](https://en.wikipedia.org/wiki/Bitwise_operation#XOR)(XOR) of the integers $a$ and $b$.

      Help Akito find the integers in the $n$-th row of the infinite triangle before the monsters reach the city.

      ### Input

      The first line contains the integer $t$ ($1 \le t \le 10^4$) -- the number of test cases.

      In the only line of each test case, there are two integers $n$ and $k$ ($1 \le n \le 10^6,\ 1 \le k < 2^{31}$) -- the row index that Akito needs and the integer in the first row of the Great Magical Triangle, respectively.

      It is guaranteed that the sum of $n$ across all test cases does not exceed $10^6$.

      ### Output

      For each test case, output $n$ integers -- the elements of the $n$-th row of the Great Magical Triangle.

      ### Example

      #### Input #1

      ```

      5

      1 5

      2 10

      3 16

      9 1

      1 52

      ```

      #### Output #1

      ```
      5
      10 10
      16 0 16
      1 0 0 0 0 0 0 0 1
      52
      ```

      ### Note

      In the first example, the first row of the Great Magical Triangle is $[5]$ by definition.

      In the second example, $T_{2,1} = T_{1,1} = 10$ and $T_{2,2} = T_{1, 1} = 10$.

instruction: base
author_email: shz060@ucsd.edu
author: LiveCodeBench Pro Team
difficulty: easy
tags: []
max_agent_timeout_sec: 300
max_test_timeout_sec: 180