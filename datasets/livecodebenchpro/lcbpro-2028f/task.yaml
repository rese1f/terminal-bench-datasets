descriptions:
  - key: base
    description: |
      LiveCodeBench Pro (Mini) - external judge.

      The agent must create a C++17 solution file at /app/main.cpp.
      This task does not include local test cases. Instead, the test harness:
        1) POSTs the code to the external judge (/submit) to get a sid,
        2) polls GET /result/{sid}?short=1 until status == "done",
        3) passes only if the judge returns passed == true.

      Environment variables (overridable at runtime):
        - BASE_URL: judge base URL (default http://38.80.122.117:8081)
        - PID: problem id (default 2028F)
        - LANG: language (default cpp)
        - CODE_PATH: path to code (default /app/main.cpp)
        - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)
  - key: problem
    description: |
      Note that the memory limit is unusual.

      The Cheshire Cat has a riddle for Alice: given $n$ integers $a\_1, a\_2, \\ldots, a\_n$ and a target $m$, is there a way to insert $+$ and $\\times$ into the circles of the expression

      $$a_1 \circ a_2 \circ \cdots \circ a_n = m$$

      to make it true? We follow the usual order of operations: $\times$ is done before $+$.

      Although Alice is excellent at chess, she is not good at math. Please help her so she can find a way out of Wonderland!

      ### Input

      Each test contains multiple test cases. The first line of input contains a single integer $t$ ($1 \le t \le 10^4$) -- the number of test cases. The description of the test cases follows.

      The first line of each test case contains two integers $n, m$ ($1\le n\le 2\cdot 10^5$; $1\le m\le 10^4$) -- the number of integers and the target, respectively.

      The second line of each test case contains $n$ integers $a_1, a_2, \ldots, a_n$ ($0\le a_i\le 10^4$) -- the elements of the array $a$.

      The sum of $n$ over all test cases does not exceed $2\cdot 10^5$.

      ### Output

      For each test case, output "YES" without quotes if it is possible to get the target by inserting $+$ or $\times$ and "NO" otherwise.

      You can output each letter in any case (for example, the strings "yEs", "yes", "Yes", and "YES" will be recognized as a positive answer).

      ### Example

      #### Input #1

      ```

      6

      5 4

      2 1 1 1 2

      5 5

      2 1 1 1 2

      5 6

      2 1 1 1 2

      5 7

      2 1 1 1 2

      5 8

      2 1 1 1 2

      5 6

      2 0 2 2 3

      ```

      #### Output #1

      ```
      YES
      YES
      YES
      YES
      NO
      YES
      ```

      ### Note

      Possible solutions for the first four test cases are shown below.

      $$\begin{align*} 2 \times 1 + 1 \times 1 \times 2 &= 4 \\ 2 \times 1 + 1 + 1 \times 2 &= 5 \\ 2 \times 1 + 1 + 1 + 2 &= 6 \\ 2 + 1 + 1 + 1 + 2 &= 7 \\ \end{align*}$$

      It is impossible to get a result of $8$ in the fifth test case.

instruction: base
author_email: shz060@ucsd.edu
author: LiveCodeBench Pro Team
difficulty: medium
tags: []
max_agent_timeout_sec: 300
max_test_timeout_sec: 180