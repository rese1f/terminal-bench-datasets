descriptions:
  - key: base
    description: |
      LiveCodeBench Pro (Mini) - external judge.

      The agent must create a C++17 solution file at /app/main.cpp.
      This task does not include local test cases. Instead, the test harness:
        1) POSTs the code to the external judge (/submit) to get a sid,
        2) polls GET /result/{sid}?short=1 until status == "done",
        3) passes only if the judge returns passed == true.

      Environment variables (overridable at runtime):
        - BASE_URL: judge base URL (default http://38.80.122.117:8081)
        - PID: problem id (default 2094E)
        - LANG: language (default cpp)
        - CODE_PATH: path to code (default /app/main.cpp)
        - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)
  - key: problem
    description: |
      Boneca Ambalabu gives you a sequence of $n$ integers $a_1,a_2,\ldots,a_n$.

      Output the maximum value of $(a_k\oplus a_1)+(a_k\oplus a_2)+\ldots+(a_k\oplus a_n)$ among all $1 \leq k \leq n$. Note that $\oplus$ denotes the [bitwise XOR operation](https://en.wikipedia.org/wiki/Bitwise_operation#XOR).

      ### Input

      The first line contains an integer $t$ ($1 \leq t \leq 10^4$) -- the number of independent test cases.

      The first line of each test case contains an integer $n$ ($1 \leq n\leq 2\cdot 10^5$) -- the length of the array.

      The second line of each test case contains $n$ integers $a_1,a_2,\ldots,a_n$ ($0 \leq a_i < 2^{30}$).

      It is guaranteed that the sum of $n$ over all test cases does not exceed $2\cdot 10^5$.

      ### Output

      For each test case, output the maximum value on a new line.

      ### Example

      #### Input #1

      ```

      5

      3

      18 18 18

      5

      1 2 4 8 16

      5

      8 13 4 5 15

      6

      625 676 729 784 841 900

      1

      1

      ```

      #### Output #1

      ```
      0
      79
      37
      1555
      0
      ```

      ### Note

      In the first test case, the best we can do is $(18\oplus18)+(18\oplus18)+(18\oplus18)=0$.

      In the second test case, we choose $k=5$ to get $(16\oplus1)+(16\oplus2)+(16\oplus4)+(16\oplus8)+(16\oplus16)=79$.

instruction: base
author_email: shz060@ucsd.edu
author: LiveCodeBench Pro Team
difficulty: easy
tags: []
max_agent_timeout_sec: 300
max_test_timeout_sec: 180