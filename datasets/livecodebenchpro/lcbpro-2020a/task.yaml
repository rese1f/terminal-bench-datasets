descriptions:
  - key: base
    description: |
      LiveCodeBench Pro (Mini) - external judge.

      The agent must create a C++17 solution file at /app/main.cpp.
      This task does not include local test cases. Instead, the test harness:
        1) POSTs the code to the external judge (/submit) to get a sid,
        2) polls GET /result/{sid}?short=1 until status == "done",
        3) passes only if the judge returns passed == true.

      Environment variables (overridable at runtime):
        - BASE_URL: judge base URL (default http://38.80.122.117:8081)
        - PID: problem id (default 2020A)
        - LANG: language (default cpp)
        - CODE_PATH: path to code (default /app/main.cpp)
        - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)
  - key: problem
    description: |
      You are given two integers $n$ and $k$.

      In one operation, you can subtract any power of $k$ from $n$. Formally, in one operation, you can replace $n$ by $(n-k^x)$ for any non-negative integer $x$.

      Find the minimum number of operations required to make $n$ equal to $0$.

      ### Input

      Each test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \le t \le 10^4$). The description of the test cases follows.

      The only line of each test case contains two integers $n$ and $k$ ($1 \le n, k \le 10^9$).

      ### Output

      For each test case, output the minimum number of operations on a new line.

      ### Example

      #### Input #1

      ```

      6

      5 2

      3 5

      16 4

      100 3

      6492 10

      10 1

      ```

      #### Output #1

      ```
      2
      3
      1
      4
      21
      10
      ```

      ### Note

      In the first test case, $n = 5$ and $k = 2$. We can perform the following sequence of operations:

      1. Subtract $2^0 = 1$ from $5$. The current value of $n$ becomes $5 - 1 = 4$.
      2. Subtract $2^2 = 4$ from $4$. The current value of $n$ becomes $4 - 4 = 0$.

      It can be shown that there is no way to make $n$ equal to $0$ in less than $2$ operations. Thus, $2$ is the answer.

      In the second test case, $n = 3$ and $k = 5$. We can perform the following sequence of operations:

      1. Subtract $5^0 = 1$ from $3$. The current value of $n$ becomes $3 - 1 = 2$.
      2. Subtract $5^0 = 1$ from $2$. The current value of $n$ becomes $2 - 1 = 1$.
      3. Subtract $5^0 = 1$ from $1$. The current value of $n$ becomes $1 - 1 = 0$.

      It can be shown that there is no way to make $n$ equal to $0$ in less than $3$ operations. Thus, $3$ is the answer.

instruction: base
author_email: shz060@ucsd.edu
author: LiveCodeBench Pro Team
difficulty: easy
tags: []
max_agent_timeout_sec: 300
max_test_timeout_sec: 180