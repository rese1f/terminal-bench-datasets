descriptions:
  - key: base
    description: |
      LiveCodeBench Pro (Mini) - external judge.

      The agent must create a C++17 solution file at /app/main.cpp.
      This task does not include local test cases. Instead, the test harness:
        1) POSTs the code to the external judge (/submit) to get a sid,
        2) polls GET /result/{sid}?short=1 until status == "done",
        3) passes only if the judge returns passed == true.

      Environment variables (overridable at runtime):
        - BASE_URL: judge base URL (default http://38.80.122.117:8081)
        - PID: problem id (default 2074B)
        - LANG: language (default cpp)
        - CODE_PATH: path to code (default /app/main.cpp)
        - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)
  - key: problem
    description: |
      The pink soldiers have given you a sequence $a$ consisting of $n$ positive integers.

      You must repeatedly perform the following operation until there is only $1$ element left.

      - Choose two distinct indices $i$ and $j$.
      - Then, choose a positive integer value $x$ such that there exists a non-degenerate triangle$^{\text{∗}}$ with side lengths $a_i$, $a_j$, and $x$.
      - Finally, remove two elements $a_i$ and $a_j$, and append $x$ to the end of $a$.

      Please find the maximum possible value of the only last element in the sequence $a$.

      $^{\text{∗}}$A triangle with side lengths $a$, $b$, $c$ is non-degenerate when $a+b > c$, $a+c > b$, $b+c > a$.

      ### Input

      Each test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \le t \le 10^4$). The description of the test cases follows.

      The first line of each test case contains a single integer $n$ ($1 \le n \le 2 \cdot 10^5$).

      The second line of each test case contains $n$ integers $a_1,a_2,\ldots,a_n$ ($1 \le a_i \le 1000$) -- the elements of the sequence $a$.

      It is guaranteed that the sum of $n$ over all test cases does not exceed $2 \cdot 10^5$.

      ### Output

      For each test case, output the maximum possible value of the only last element on a separate line.

      ### Example

      #### Input #1

      ```

      4

      1

      10

      3

      998 244 353

      5

      1 2 3 4 5

      9

      9 9 8 2 4 4 3 5 3

      ```

      #### Output #1

      ```
      10
      1593
      11
      39
      ```

      ### Note

      On the first test case, there is already only one element. The value of the only last element is $10$.

      On the second test case, $a$ is initially $[998,244,353]$. The following series of operations is valid:

      1. Erase $a_2=244$ and $a_3=353$, and append $596$ to the end of $a$. $a$ is now $[998,596]$.
      2. Erase $a_1=998$ and $a_2=596$, and append $1593$ to the end of $a$. $a$ is now $[1593]$.

      It can be shown that the only last element cannot be greater than $1593$. Therefore, the answer is $1593$.

instruction: base
author_email: shz060@ucsd.edu
author: LiveCodeBench Pro Team
difficulty: easy
tags: []
max_agent_timeout_sec: 300
max_test_timeout_sec: 180